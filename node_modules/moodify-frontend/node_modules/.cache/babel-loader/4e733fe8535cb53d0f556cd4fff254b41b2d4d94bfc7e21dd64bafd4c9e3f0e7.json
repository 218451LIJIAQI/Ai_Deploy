{"ast":null,"code":"/**\n * MoodInput Component\n * Handles user mood input through multiple methods: dropdown selection, text description, or image analysis\n * Integrates with AI emotion detection and Spotify API for music recommendations\n */import React,{useState}from'react';import{Form,Button,Alert,Row,Col}from'react-bootstrap';import axios from'axios';import{fetchSongsByMood}from'./apiService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL='http://127.0.0.1:8000/api';// Available music genres/moods for dropdown selection\nconst moodOptions=[\"acoustic\",\"afrobeat\",\"alt-rock\",\"alternative\",\"ambient\",\"anime\",\"black-metal\",\"bluegrass\",\"blues\",\"bossanova\",\"brazil\",\"breakbeat\",\"british\",\"cantopop\",\"chicago-house\",\"children\",\"chill\",\"classical\",\"club\",\"comedy\",\"country\",\"dance\",\"dancehall\",\"death-metal\",\"deep-house\",\"detroit-techno\",\"disco\",\"disney\",\"drum-and-bass\",\"dub\",\"dubstep\",\"edm\",\"electro\",\"electronic\",\"emo\",\"folk\",\"forro\",\"french\",\"funk\",\"garage\",\"german\",\"gospel\",\"goth\",\"grindcore\",\"groove\",\"grunge\",\"guitar\",\"happy\",\"hard-rock\",\"hardcore\",\"hardstyle\",\"heavy-metal\",\"hip-hop\",\"holidays\",\"honky-tonk\",\"house\",\"idm\",\"indian\",\"indie\",\"indie-pop\",\"industrial\",\"iranian\",\"j-dance\",\"j-idol\",\"j-pop\",\"j-rock\",\"jazz\",\"k-pop\",\"kids\",\"latin\",\"latino\",\"malay\",\"mandopop\",\"metal\",\"metal-misc\",\"metalcore\",\"minimal-techno\",\"movies\",\"mpb\",\"new-age\",\"new-release\",\"opera\",\"pagode\",\"party\",\"philippines-opm\",\"piano\",\"pop\",\"pop-film\",\"post-dubstep\",\"power-pop\",\"progressive-house\",\"psych-rock\",\"punk\",\"punk-rock\",\"r-n-b\",\"rainy-day\",\"reggae\",\"reggaeton\",\"road-trip\",\"rock\",\"rock-n-roll\",\"rockabilly\",\"romance\",\"sad\",\"salsa\",\"samba\",\"sertanejo\",\"show-tunes\",\"singer-songwriter\",\"ska\",\"sleep\",\"songwriter\",\"soul\",\"soundtracks\",\"spanish\",\"study\",\"summer\",\"swedish\",\"synth-pop\",\"tango\",\"techno\",\"trance\",\"trip-hop\",\"turkish\",\"work-out\",\"world-music\"];// Input method options with descriptions\nconst inputMethodOptions=[{value:'dropdown',icon:'🎛️',label:'Choose Genre',description:'Select from curated music genres'},{value:'text',icon:'💭',label:'Describe Mood',description:'Describe how you\\'re feeling in words'},{value:'image',icon:'📸',label:'Upload Selfie',description:'Let AI analyze your facial expression'}];function MoodInput(_ref){let{onMoodSelect,onSongsFetched,onError,isLoading:parentIsLoading}=_ref;// State management for input handling\nconst[inputMethod,setInputMethod]=useState('dropdown');const[selectedMood,setSelectedMood]=useState('');const[textInput,setTextInput]=useState('');const[imageFile,setImageFile]=useState(null);const[isLoading,setIsLoading]=useState(false);const[detectedMood,setDetectedMood]=useState('');const[error,setError]=useState('');const[isTyping,setIsTyping]=useState(false);const[currentStep,setCurrentStep]=useState(1);const[emotionFeedback,setEmotionFeedback]=useState('');/**\n   * Main form submission handler\n   * Processes different input methods and triggers mood detection/song fetching\n   */const handleSubmit=async e=>{e.preventDefault();setError('');setDetectedMood('');setEmotionFeedback('');// Validate input based on selected method\nif(inputMethod==='dropdown'&&!selectedMood){setError('Please select a mood from the dropdown.');return;}if(inputMethod==='text'&&!textInput.trim()){setError('Please enter how you feel in the text input.');return;}if(inputMethod==='image'&&!imageFile){setError('Please upload an image.');return;}setIsLoading(true);try{let mood='';if(inputMethod==='dropdown'){mood=selectedMood;}else if(inputMethod==='text'){// Process text input through AI mood detection\nconst res=await axios.post(\"\".concat(API_BASE_URL,\"/detect-text-mood/\"),{text:textInput});mood=res.data.mood;}else if(inputMethod==='image'){// Process image through AI emotion detection\nconst formData=new FormData();formData.append('image',imageFile);const res=await axios.post(\"\".concat(API_BASE_URL,\"/detect-image-emotion/\"),formData,{headers:{'Content-Type':'multipart/form-data'}});const emotion=res.data.emotion.toLowerCase();// Emotion to music mapping based on psychological principles\n// Recommend mood-improving music for negative emotions\nconst emotionToMusicMapping={'sad':'Happy',// Recommend happy music when sad\n'angry':'Calm',// Recommend calm music when angry\n'fear':'Calm',// Recommend calm music when fearful\n'disgust':'Happy',// Recommend happy music when disgusted\n'happy':'Happy',// Recommend happy music when happy\n'surprise':'Energetic',// Recommend energetic music when surprised\n'neutral':'Party'// Recommend party music when neutral\n};// User-friendly emotion feedback messages\nconst emotionFeedbackMessages={'sad':'😔 I detected that you look a bit sad, let me recommend some happy music to brighten your mood!','angry':'😤 You look somewhat angry, let me recommend some calm music to help you relax','fear':'😰 You look a bit nervous or afraid, let me recommend some calm music to soothe your mood','disgust':'😒 You don\\'t look very happy, let me recommend some joyful music to improve your mood!','happy':'😊 You look very happy! Let me recommend some equally joyful music to continue this wonderful mood','surprise':'😮 You look surprised! Let me recommend some energetic music to match your state','neutral':'😐 You look quite calm, let me recommend some party music to add energy to your day!'};// Apply emotion-to-music mapping\nmood=emotionToMusicMapping[emotion]||'Party';// Set user feedback message\nconst feedback=emotionFeedbackMessages[emotion]||\"Detected emotion: \".concat(emotion,\", recommending \").concat(mood,\" type music for you\");setEmotionFeedback(feedback);// Development debugging log\nconsole.log(\"Detected emotion: \".concat(emotion,\", recommended music type: \").concat(mood));}setDetectedMood(mood);onMoodSelect(mood);const songs=await fetchSongsByMood(mood);onSongsFetched(songs);}catch(err){console.error(err);setError('Failed to detect mood or fetch songs.');if(onError)onError();}finally{setIsLoading(false);}};/**\n   * Handle text input changes with typing indicator\n   */const handleTextChange=e=>{setTextInput(e.target.value);setIsTyping(true);// Clear typing indicator after user stops typing\nclearTimeout(window.typingTimeout);window.typingTimeout=setTimeout(()=>{setIsTyping(false);},1000);};/**\n   * Handle dropdown selection with styling fixes\n   */const handleSelectChange=e=>{setSelectedMood(e.target.value);// Apply consistent styling to dropdown options\nsetTimeout(()=>{const select=e.target;const options=select.querySelectorAll('option');options.forEach(option=>{option.style.backgroundColor='#1a1a2e';option.style.color='#ffffff';option.style.fontWeight=option.selected?'700':'500';});},10);};return/*#__PURE__*/_jsx(\"div\",{className:\"desktop-mood-input slide-in\",children:/*#__PURE__*/_jsx(\"div\",{className:\"glass-card desktop-input-card liquid-border\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-header text-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"desktop-section-title dynamic-text\",children:[currentStep===1?'Choose Your Perfect Vibe':currentStep===2?'Express Your Music Mood':'Upload Your Inspiration',/*#__PURE__*/_jsxs(\"div\",{className:\"audio-bars mt-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"audio-bar\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle neon-text\",children:\"Let your emotions guide the perfect musical journey\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label desktop-section-title\",children:\"\\u2728 Choose Your Input Method\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-input-methods\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-method-card \".concat(currentStep===1?'active':'',\" morph-button\"),onClick:()=>{setCurrentStep(1);setInputMethod('dropdown');},\"data-tooltip\":\"Select from curated moods\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"method-card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"method-icon\",children:\"\\uD83C\\uDF9B\\uFE0F\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"method-title\",children:\"Choose Genre\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"method-description\",children:\"Select from curated music genres\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-method-card \".concat(currentStep===2?'active':'',\" morph-button\"),onClick:()=>{setCurrentStep(2);setInputMethod('text');},\"data-tooltip\":\"Describe your perfect vibe\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"method-card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"method-icon\",children:\"\\uD83D\\uDCAD\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"method-title\",children:\"Describe Mood\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"method-description\",children:\"Describe how you're feeling in words\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-method-card \".concat(currentStep===3?'active':'',\" morph-button\"),onClick:()=>{setCurrentStep(3);setInputMethod('image');},\"data-tooltip\":\"Upload image for mood analysis\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"method-card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"method-icon\",children:\"\\uD83D\\uDCF8\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"method-title\",children:\"Upload Selfie\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"method-description\",children:\"Let AI analyze your facial expression\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-dynamic-input\",children:[currentStep===1&&/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{lg:10,className:\"mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label desktop-input-label\",children:\"\\uD83C\\uDFB5 Select Your Music Genre\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select desktop-mood-selector\",value:selectedMood,onChange:e=>{setSelectedMood(e.target.value);setInputMethod('dropdown');},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Music Vibe\"}),moodOptions.map(mood=>/*#__PURE__*/_jsx(\"option\",{value:mood,children:mood.charAt(0).toUpperCase()+mood.slice(1).replace(/-/g,' ')},mood))]})]})})}),currentStep===2&&/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{lg:8,className:\"mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label desktop-input-label\",children:[\"\\uD83D\\uDCAD Describe Your Current Mood\",isTyping&&/*#__PURE__*/_jsx(\"span\",{className:\"typing-indicator\",children:\"\\u270D\\uFE0F Typing...\"})]}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control desktop-text-area\",value:textInput,onChange:handleTextChange,placeholder:\"e.g., I'm feeling energetic and ready to dance, or I'm in a mellow, reflective mood...\",rows:4}),/*#__PURE__*/_jsx(\"small\",{className:\"input-hint\",children:\"\\uD83D\\uDCA1 Be descriptive! The more details you provide, the better AI can understand your vibe\"})]})})}),currentStep===3&&/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{lg:8,md:10,className:\"mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label desktop-input-label\",children:\"\\uD83D\\uDCF8 Upload Your Selfie\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-file-upload\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",onChange:e=>setImageFile(e.target.files[0]),className:\"file-upload-input\",id:\"selfie-upload\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"selfie-upload\",className:\"desktop-file-upload-label\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"upload-icon\",children:\"\\uD83D\\uDCF8\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"upload-text\",children:imageFile?/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Selected:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"file-name-display\",children:imageFile.name.length>20?\"\".concat(imageFile.name.substring(0,20),\"...\"):imageFile.name})]}):'Tap to select image'}),/*#__PURE__*/_jsx(\"small\",{className:\"upload-hint\",children:\"JPG, PNG or GIF \\u2022 Max 10MB\"})]})]})]})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"desktop-submit-section\",children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{lg:6,className:\"mx-auto text-center\",children:[error&&/*#__PURE__*/_jsxs(Alert,{variant:\"danger\",className:\"desktop-alert\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Oops! \"}),error]}),detectedMood&&/*#__PURE__*/_jsxs(\"div\",{className:\"desktop-detected-mood\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detected-label\",children:\"\\uD83C\\uDFAF Detected Mood:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detected-value\",children:detectedMood})]}),emotionFeedback&&/*#__PURE__*/_jsx(\"div\",{className:\"desktop-emotion-feedback\",children:/*#__PURE__*/_jsx(\"p\",{className:\"emotion-feedback-text\",children:emotionFeedback})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"desktop-submit-btn morph-button neon-text \".concat(isLoading||parentIsLoading?'is-loading':''),disabled:!selectedMood&&!textInput&&!imageFile||isLoading||parentIsLoading,size:\"lg\",\"data-tooltip\":isLoading||parentIsLoading?'Processing...':'Start discovering music',children:isLoading||parentIsLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"btn-spinner\"}),\"Processing Your Vibe...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDE80 Discover Music\"})})]})})})]})})});}export default MoodInput;","map":{"version":3,"names":["React","useState","Form","Button","Alert","Row","Col","axios","fetchSongsByMood","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","moodOptions","inputMethodOptions","value","icon","label","description","MoodInput","_ref","onMoodSelect","onSongsFetched","onError","isLoading","parentIsLoading","inputMethod","setInputMethod","selectedMood","setSelectedMood","textInput","setTextInput","imageFile","setImageFile","setIsLoading","detectedMood","setDetectedMood","error","setError","isTyping","setIsTyping","currentStep","setCurrentStep","emotionFeedback","setEmotionFeedback","handleSubmit","e","preventDefault","trim","mood","res","post","concat","text","data","formData","FormData","append","headers","emotion","toLowerCase","emotionToMusicMapping","emotionFeedbackMessages","feedback","console","log","songs","err","handleTextChange","target","clearTimeout","window","typingTimeout","setTimeout","handleSelectChange","select","options","querySelectorAll","forEach","option","style","backgroundColor","color","fontWeight","selected","className","children","onSubmit","onClick","lg","onChange","map","charAt","toUpperCase","slice","replace","placeholder","rows","md","type","accept","files","id","htmlFor","name","length","substring","variant","disabled","size"],"sources":["C:/Users/89846/Desktop/AI_PROJECT-main/moody-music/src/components/MoodInput.js"],"sourcesContent":["/**\n * MoodInput Component\n * Handles user mood input through multiple methods: dropdown selection, text description, or image analysis\n * Integrates with AI emotion detection and Spotify API for music recommendations\n */\n\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { fetchSongsByMood } from './apiService';\n\nconst API_BASE_URL = 'http://127.0.0.1:8000/api';\n\n// Available music genres/moods for dropdown selection\nconst moodOptions = [\n  \"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \n  \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\", \"breakbeat\", \n  \"british\", \"cantopop\", \"chicago-house\", \"children\", \"chill\", \"classical\", \n  \"club\", \"comedy\", \"country\", \"dance\", \"dancehall\", \"death-metal\", \n  \"deep-house\", \"detroit-techno\", \"disco\", \"disney\", \"drum-and-bass\", \"dub\", \n  \"dubstep\", \"edm\", \"electro\", \"electronic\", \"emo\", \"folk\", \"forro\", \"french\", \n  \"funk\", \"garage\", \"german\", \"gospel\", \"goth\", \"grindcore\", \"groove\", \n  \"grunge\", \"guitar\", \"happy\", \"hard-rock\", \"hardcore\", \"hardstyle\", \n  \"heavy-metal\", \"hip-hop\", \"holidays\", \"honky-tonk\", \"house\", \"idm\", \n  \"indian\", \"indie\", \"indie-pop\", \"industrial\", \"iranian\", \"j-dance\", \n  \"j-idol\", \"j-pop\", \"j-rock\", \"jazz\", \"k-pop\", \"kids\", \"latin\", \"latino\", \n  \"malay\", \"mandopop\", \"metal\", \"metal-misc\", \"metalcore\", \"minimal-techno\", \n  \"movies\", \"mpb\", \"new-age\", \"new-release\", \"opera\", \"pagode\", \"party\", \n  \"philippines-opm\", \"piano\", \"pop\", \"pop-film\", \"post-dubstep\", \"power-pop\", \n  \"progressive-house\", \"psych-rock\", \"punk\", \"punk-rock\", \"r-n-b\", \"rainy-day\", \n  \"reggae\", \"reggaeton\", \"road-trip\", \"rock\", \"rock-n-roll\", \"rockabilly\", \n  \"romance\", \"sad\", \"salsa\", \"samba\", \"sertanejo\", \"show-tunes\", \n  \"singer-songwriter\", \"ska\", \"sleep\", \"songwriter\", \"soul\", \"soundtracks\", \n  \"spanish\", \"study\", \"summer\", \"swedish\", \"synth-pop\", \"tango\", \"techno\", \n  \"trance\", \"trip-hop\", \"turkish\", \"work-out\", \"world-music\"\n];\n\n// Input method options with descriptions\nconst inputMethodOptions = [\n  { value: 'dropdown', icon: '🎛️', label: 'Choose Genre', description: 'Select from curated music genres' },\n  { value: 'text', icon: '💭', label: 'Describe Mood', description: 'Describe how you\\'re feeling in words' },\n  { value: 'image', icon: '📸', label: 'Upload Selfie', description: 'Let AI analyze your facial expression' }\n];\n\nfunction MoodInput({ onMoodSelect, onSongsFetched, onError, isLoading: parentIsLoading }) {\n  // State management for input handling\n  const [inputMethod, setInputMethod] = useState('dropdown');\n  const [selectedMood, setSelectedMood] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [detectedMood, setDetectedMood] = useState('');\n  const [error, setError] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [emotionFeedback, setEmotionFeedback] = useState('');\n\n  /**\n   * Main form submission handler\n   * Processes different input methods and triggers mood detection/song fetching\n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setDetectedMood('');\n    setEmotionFeedback('');\n    \n    // Validate input based on selected method\n    if (inputMethod === 'dropdown' && !selectedMood) {\n      setError('Please select a mood from the dropdown.');\n      return;\n    }\n    if (inputMethod === 'text' && !textInput.trim()) {\n      setError('Please enter how you feel in the text input.');\n      return;\n    }\n    if (inputMethod === 'image' && !imageFile) {\n      setError('Please upload an image.');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      let mood = '';\n\n      if (inputMethod === 'dropdown') {\n        mood = selectedMood;\n      } else if (inputMethod === 'text') {\n        // Process text input through AI mood detection\n        const res = await axios.post(`${API_BASE_URL}/detect-text-mood/`, { text: textInput });\n        mood = res.data.mood;\n      } else if (inputMethod === 'image') {\n        // Process image through AI emotion detection\n        const formData = new FormData();\n        formData.append('image', imageFile);\n        const res = await axios.post(`${API_BASE_URL}/detect-image-emotion/`, formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n        const emotion = res.data.emotion.toLowerCase();\n        \n        // Emotion to music mapping based on psychological principles\n        // Recommend mood-improving music for negative emotions\n        const emotionToMusicMapping = {\n          'sad': 'Happy',        // Recommend happy music when sad\n          'angry': 'Calm',       // Recommend calm music when angry\n          'fear': 'Calm',        // Recommend calm music when fearful\n          'disgust': 'Happy',    // Recommend happy music when disgusted\n          'happy': 'Happy',      // Recommend happy music when happy\n          'surprise': 'Energetic', // Recommend energetic music when surprised\n          'neutral': 'Party'     // Recommend party music when neutral\n        };\n        \n        // User-friendly emotion feedback messages\n        const emotionFeedbackMessages = {\n          'sad': '😔 I detected that you look a bit sad, let me recommend some happy music to brighten your mood!',\n          'angry': '😤 You look somewhat angry, let me recommend some calm music to help you relax',\n          'fear': '😰 You look a bit nervous or afraid, let me recommend some calm music to soothe your mood',\n          'disgust': '😒 You don\\'t look very happy, let me recommend some joyful music to improve your mood!',\n          'happy': '😊 You look very happy! Let me recommend some equally joyful music to continue this wonderful mood',\n          'surprise': '😮 You look surprised! Let me recommend some energetic music to match your state',\n          'neutral': '😐 You look quite calm, let me recommend some party music to add energy to your day!'\n        };\n        \n        // Apply emotion-to-music mapping\n        mood = emotionToMusicMapping[emotion] || 'Party';\n        \n        // Set user feedback message\n        const feedback = emotionFeedbackMessages[emotion] || `Detected emotion: ${emotion}, recommending ${mood} type music for you`;\n        setEmotionFeedback(feedback);\n        \n        // Development debugging log\n        console.log(`Detected emotion: ${emotion}, recommended music type: ${mood}`);\n      }\n\n      setDetectedMood(mood);\n      onMoodSelect(mood);\n      const songs = await fetchSongsByMood(mood);\n      onSongsFetched(songs);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to detect mood or fetch songs.');\n      if (onError) onError();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handle text input changes with typing indicator\n   */\n  const handleTextChange = (e) => {\n    setTextInput(e.target.value);\n    setIsTyping(true);\n    \n    // Clear typing indicator after user stops typing\n    clearTimeout(window.typingTimeout);\n    window.typingTimeout = setTimeout(() => {\n      setIsTyping(false);\n    }, 1000);\n  };\n\n  /**\n   * Handle dropdown selection with styling fixes\n   */\n  const handleSelectChange = (e) => {\n    setSelectedMood(e.target.value);\n    \n    // Apply consistent styling to dropdown options\n    setTimeout(() => {\n      const select = e.target;\n      const options = select.querySelectorAll('option');\n      options.forEach(option => {\n        option.style.backgroundColor = '#1a1a2e';\n        option.style.color = '#ffffff';\n        option.style.fontWeight = option.selected ? '700' : '500';\n      });\n    }, 10);\n  };\n\n  return (\n    <div className=\"desktop-mood-input slide-in\">\n      <div className=\"glass-card desktop-input-card liquid-border\">\n        <Form onSubmit={handleSubmit}>\n              {/* Dynamic header based on current step */}\n              <div className=\"content-header text-center mb-4\">\n                <h2 className=\"desktop-section-title dynamic-text\">\n                  {currentStep === 1 ? 'Choose Your Perfect Vibe' : \n                   currentStep === 2 ? 'Express Your Music Mood' :\n                   'Upload Your Inspiration'}\n                  \n                  {/* Audio visualizer animation */}\n                  <div className=\"audio-bars mt-3\">\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                    <div className=\"audio-bar\"></div>\n                  </div>\n                </h2>\n                \n                <p className=\"page-subtitle neon-text\">\n                  Let your emotions guide the perfect musical journey\n                </p>\n              </div>\n\n              {/* Input method selection grid */}\n              <div className=\"form-group\">\n                <label className=\"form-label desktop-section-title\">\n                  ✨ Choose Your Input Method\n                </label>\n                <div className=\"desktop-input-methods\">\n                  <div \n                    className={`desktop-method-card ${currentStep === 1 ? 'active' : ''} morph-button`}\n                    onClick={() => {\n                      setCurrentStep(1);\n                      setInputMethod('dropdown');\n                    }}\n                    data-tooltip=\"Select from curated moods\"\n                  >\n                    <div className=\"method-card-header\">\n                      <span className=\"method-icon\">🎛️</span>\n                      <h4 className=\"method-title\">Choose Genre</h4>\n                    </div>\n                    <p className=\"method-description\">Select from curated music genres</p>\n                  </div>\n\n                  <div \n                    className={`desktop-method-card ${currentStep === 2 ? 'active' : ''} morph-button`}\n                    onClick={() => {\n                      setCurrentStep(2);\n                      setInputMethod('text');\n                    }}\n                    data-tooltip=\"Describe your perfect vibe\"\n                  >\n                    <div className=\"method-card-header\">\n                      <span className=\"method-icon\">💭</span>\n                      <h4 className=\"method-title\">Describe Mood</h4>\n                    </div>\n                    <p className=\"method-description\">Describe how you're feeling in words</p>\n                  </div>\n\n                  <div \n                    className={`desktop-method-card ${currentStep === 3 ? 'active' : ''} morph-button`}\n                    onClick={() => {\n                      setCurrentStep(3);\n                      setInputMethod('image');\n                    }}\n                    data-tooltip=\"Upload image for mood analysis\"\n                  >\n                    <div className=\"method-card-header\">\n                      <span className=\"method-icon\">📸</span>\n                      <h4 className=\"method-title\">Upload Selfie</h4>\n                    </div>\n                    <p className=\"method-description\">Let AI analyze your facial expression</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Dynamic Input Section */}\n              <div className=\"desktop-dynamic-input\">\n                {currentStep === 1 && (\n                  <Row>\n                    <Col lg={10} className=\"mx-auto\">\n                      <div className=\"form-group\">\n                        <label className=\"form-label desktop-input-label\">🎵 Select Your Music Genre</label>\n                        <select \n                          className=\"form-select desktop-mood-selector\" \n                          value={selectedMood} \n                          onChange={(e) => {\n                            setSelectedMood(e.target.value);\n                            setInputMethod('dropdown');\n                          }}\n                        >\n                          <option value=\"\">Select Music Vibe</option>\n                          {moodOptions.map(mood => (\n                            <option key={mood} value={mood}>\n                              {mood.charAt(0).toUpperCase() + mood.slice(1).replace(/-/g, ' ')}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </Col>\n                  </Row>\n                )}\n\n                {currentStep === 2 && (\n                  <Row>\n                    <Col lg={8} className=\"mx-auto\">\n                      <div className=\"form-group\">\n                        <label className=\"form-label desktop-input-label\">\n                          💭 Describe Your Current Mood\n                          {isTyping && <span className=\"typing-indicator\">✍️ Typing...</span>}\n                        </label>\n                        <textarea\n                          className=\"form-control desktop-text-area\"\n                          value={textInput}\n                          onChange={handleTextChange}\n                          placeholder=\"e.g., I'm feeling energetic and ready to dance, or I'm in a mellow, reflective mood...\"\n                          rows={4}\n                        />\n                        <small className=\"input-hint\">\n                          💡 Be descriptive! The more details you provide, the better AI can understand your vibe\n                        </small>\n                      </div>\n                    </Col>\n                  </Row>\n                )}\n\n                {currentStep === 3 && (\n                  <Row>\n                    <Col lg={8} md={10} className=\"mx-auto\">\n                      <div className=\"form-group\">\n                        <label className=\"form-label desktop-input-label\">📸 Upload Your Selfie</label>\n                        <div className=\"desktop-file-upload\">\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) => setImageFile(e.target.files[0])}\n                            className=\"file-upload-input\"\n                            id=\"selfie-upload\"\n                          />\n                          <label htmlFor=\"selfie-upload\" className=\"desktop-file-upload-label\">\n                            <div className=\"upload-icon\">📸</div>\n                            <div className=\"upload-content\">\n                              <p className=\"upload-text\">\n                                {imageFile ? (\n                                  <span>\n                                    <strong>Selected:</strong><br />\n                                    <span className=\"file-name-display\">\n                                      {imageFile.name.length > 20 ? `${imageFile.name.substring(0, 20)}...` : imageFile.name}\n                                    </span>\n                                  </span>\n                                ) : 'Tap to select image'}\n                              </p>\n                              <small className=\"upload-hint\">\n                                JPG, PNG or GIF • Max 10MB\n                              </small>\n                            </div>\n                          </label>\n                        </div>\n                      </div>\n                    </Col>\n                  </Row>\n                )}\n              </div>\n\n              {/* Submit Section */}\n              <div className=\"desktop-submit-section\">\n                <Row>\n                  <Col lg={6} className=\"mx-auto text-center\">\n                    {error && (\n                      <Alert variant=\"danger\" className=\"desktop-alert\">\n                        <strong>Oops! </strong>{error}\n                      </Alert>\n                    )}\n                    \n                    {detectedMood && (\n                      <div className=\"desktop-detected-mood\">\n                        <span className=\"detected-label\">🎯 Detected Mood:</span>\n                        <span className=\"detected-value\">{detectedMood}</span>\n                      </div>\n                    )}\n\n                    {emotionFeedback && (\n                      <div className=\"desktop-emotion-feedback\">\n                        <p className=\"emotion-feedback-text\">{emotionFeedback}</p>\n                      </div>\n                    )}\n\n                                          <Button \n                        type=\"submit\"\n                        className={`desktop-submit-btn morph-button neon-text ${isLoading || parentIsLoading ? 'is-loading' : ''}`}\n                        disabled={(!selectedMood && !textInput && !imageFile) || isLoading || parentIsLoading}\n                        size=\"lg\"\n                        data-tooltip={isLoading || parentIsLoading ? 'Processing...' : 'Start discovering music'}\n                      >\n                      {isLoading || parentIsLoading ? (\n                        <>\n                          <div className=\"btn-spinner\"></div>\n                          Processing Your Vibe...\n                        </>\n                      ) : (\n                        <>\n                          🚀 Discover Music\n                        </>\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default MoodInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}